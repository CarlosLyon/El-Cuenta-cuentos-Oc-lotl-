---
- name: Detener un servicio en Ubuntu
  hosts: localhost
  become: true
  tasks:
     - name: Detectar sistema operativo
       set_fact:
        sistema: "{{ ansible_os_family }}"
     - debug:
        msg: "El OS es: {{ sistema }}"


##########################
## ECHO PARA LINUX ##
##########################

     - name: Detener el servicio "apache2"
       service:
        name: apache2
        state: stopped
       when: sistema == "RedHat" or sistema == "Debian"

##########################
## ECHO PARA WINDOWS ##
##########################
- name: Detener un servicio en Windows
  hosts: localhost
  tasks:
    - name: Detener el servicio "Apache2"
      win_service:
        name: apache2
        start_mode: manual
        state: stopped
      when: sistema == "Windows"    


##########################
## EVALUACIÓN DE TAREA EN LINUX ##
##########################
    - set_fact:
        resultTarea: "{{ 'SUCCESSFUL' if grupo_lxn is defined and grupo_lxn.changed == true else 'ESCALATED' }}"
      ignore_errors: yes
      when: sistema == "RedHat" or sistema == "Debian"

    - debug:
        var: resultTarea
      ignore_errors: yes
      when: sistema == "RedHat" or sistema == "Debian"

    ##########################
    ## EVALUACIÓN DE TAREA EN WINDOWS ##
    ##########################
    - set_fact:
        resultTarea: "{{ 'SUCCESSFUL' if grupo_win is defined and grupo_win.changed == true else 'ESCALATED' }}"
      ignore_errors: yes
      when: sistema == "Windows"

    - debug:
        var: resultTarea
      ignore_errors: yes
      when: sistema == "Windows"

    ##########################
    ## RESULTADO DE LA TAREA EJECUTADA EN LINUX ##
    ##########################
    - name: Resultado de la tarea cuando es Exitoso en Linux
      block:
        - name: Muestra el Resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "The group has been created successfully in the host {{ ansible_hostname }}"
              - "{{ group }}"
          ignore_errors: yes
      when: resultTarea == "SUCCESSFUL" and sistema == "RedHat" or sistema == "Debian"

    - name: Resultado de la tarea cuando es Fallido en Linux
      block:
        - name: Muestra el Resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "Error message: The group cannot be created"
          ignore_errors: yes
      when: resultTarea == "ESCALATED" and sistema == "RedHat" or sistema == "Debian"

    ##########################
    ## RESULTADO DE LA TAREA EJECUTADA EN WINDOWS ##
    ##########################
    - name: Resultado de la tarea cuando es Exitoso en Windows
      block:
        - name: Muestra el Resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "The group has been created successfully in the host {{ ansible_hostname }}"
              - "{{ group }}"
          ignore_errors: yes
      when: resultTarea == "SUCCESSFUL" and sistema == "Windows"

    - name: Resultado de la tarea cuando es Fallido en Windows
      block:
        - name: Muestra el Resultado
          debug:
            msg:
              - "RESULT-AUTOMATION"
              - "-------------------------------------------------------"
              - "Remediation Task Result is: {{ resultTarea }}"
              - "Error message: The group cannot be created"
              - "{{ group }}"
          ignore_errors: yes
      when: resultTarea == "ESCALATED" and sistema == "Windows"      